name: Deploy BOSS STACK

on:
  push:
    branches: [main, staging]
  pull_request:
    branches: [main]

env:
  NODE_VERSION: '18'
  RUST_VERSION: '1.75'

jobs:
  # Build and Test
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION }}
          target: wasm32-unknown-unknown
          
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo
            ~/node_modules
            ~/.npm
          key: ${{ runner.os }}-deps-${{ hashFiles('**/package-lock.json', '**/Cargo.lock') }}
          
      - name: Install dependencies
        run: |
          cd frontend && npm ci
          cd ../core && cargo build --target wasm32-unknown-unknown
          
      - name: Run tests
        run: |
          cd frontend && npm test -- --watchAll=false
          cd ../core && cargo test

  # Deploy to Cloudflare Pages (Production/Staging)
  deploy-frontend:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          
      - name: Build frontend
        run: |
          cd frontend
          npm ci
          npm run build
        env:
          VITE_PUSHER_KEY: ${{ secrets.PUSHER_KEY }}
          VITE_PUSHER_CLUSTER: ${{ secrets.PUSHER_CLUSTER }}
          VITE_CLERK_PUBLISHABLE_KEY: ${{ secrets.CLERK_PUBLISHABLE_KEY }}
          VITE_SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          
      - name: Deploy to Cloudflare Pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: table1837-glenrock
          directory: frontend/dist
          branch: ${{ github.ref_name }}
          
  # Deploy Rust Edge Workers
  deploy-edge-workers:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION }}
          target: wasm32-unknown-unknown
          
      - name: Install wrangler
        run: npm install -g wrangler
        
      - name: Build and Deploy Workers
        run: |
          cd infrastructure/rust-edge-workers
          cargo build --release --target wasm32-unknown-unknown
          wrangler publish
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

  # Deploy to Deta
  deploy-deta:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      
      - name: Deploy to Deta
        uses: BogDAAAMN/deta-deploy-action@v1.0.1
        with:
          deta-access-token: ${{ secrets.DETA_ACCESS_TOKEN }}
          deta-name: table1837-api
          deta-project: table1837
          
  # Database Migrations
  migrate-database:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      
      - name: Run Neon migrations
        run: |
          psql ${{ secrets.NEON_DATABASE_URL }} < infrastructure/neon-schema.sql
        env:
          PGPASSWORD: ${{ secrets.NEON_DATABASE_PASSWORD }}

  # Sentry Release
  sentry-release:
    needs: [deploy-frontend, deploy-edge-workers]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      
      - name: Create Sentry release
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: table1837
        with:
          environment: ${{ github.ref_name }}
          version: ${{ github.sha }}